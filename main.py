import os
import telebot
from flask import Flask, request
from dotenv import load_dotenv
import time
import random

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
TELEGRAM_USER_ID = int(os.getenv("TELEGRAM_USER_ID", "0"))
TRADE_AMOUNT = float(os.getenv("TRADE_AMOUNT", "0.01"))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –∏ Telebot
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
last_signal_time = 0

# === –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥ ===

@bot.message_handler(commands=['start'])
def handle_start(message):
    print(f">>> /start –æ—Ç {message.chat.id}")
    bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ì–æ—Ç–æ–≤ –∫ —Å–∏–≥–Ω–∞–ª–∞–º.")

@bot.message_handler(commands=['signal'])
def handle_signal(message):
    print(f">>> /signal –æ—Ç {message.chat.id}")
    if message.chat.id != TELEGRAM_USER_ID:
        bot.send_message(message.chat.id, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏–≥–Ω–∞–ª–∞–º.")
        return
    send_trade_signal()

# === –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–∞ ===

def send_trade_signal():
    global last_signal_time
    now = time.time()

    # –ï—Å–ª–∏ —Å–∏–≥–Ω–∞–ª —Å–ª–∏—à–∫–æ–º —Å–∫–æ—Ä–æ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å < 90%, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    probability = round(random.uniform(80, 99), 2)
    if probability < 90 and now - last_signal_time < 3600:
        print("‚è≥ –°–∏–≥–Ω–∞–ª –ø—Ä–æ–ø—É—â–µ–Ω: –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å < 90% –∏ –ª–∏–º–∏—Ç 1 –≤ —á–∞—Å")
        return

    last_signal_time = now
    symbol = random.choice(['BTC', 'ETH', 'SOL'])
    direction = random.choice(['LONG', 'SHORT'])
    entry_price = round(random.uniform(25000, 35000), 2)
    tp = round(entry_price * (1.01 if direction == 'LONG' else 0.99), 2)
    sl = round(entry_price * (0.99 if direction == 'LONG' else 1.01), 2)

    msg = f"""üì¢ <b>{symbol} {direction}</b>
üí∞ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry_price}
üéØ TP: {tp}
üõë SL: {sl}
üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {probability}%"""
    
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞:\n{msg}")
    bot.send_message(TELEGRAM_USER_ID, msg, parse_mode='HTML')

# === Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ ===

@app.route(f'/{BOT_TOKEN}', methods=['POST'])
def webhook():
    try:
        json_str = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_str)
        print(">>> [Webhook] Update received!")
        if update.message:
            print(f">>> Message received: {update.message.text}")
        bot.process_new_updates([update])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Webhook: {e}")
    return "ok", 200

# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===

if __name__ == "__main__":
    print(f"[BOOT] BOT_TOKEN: {BOT_TOKEN}")
    print(f"[BOOT] WEBHOOK_URL: {WEBHOOK_URL}")
    print(f"[BOOT] TELEGRAM_USER_ID: {TELEGRAM_USER_ID}")
    print(f"[BOOT] TRADE_AMOUNT: {TRADE_AMOUNT}")

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
    bot.remove_webhook()
    success = bot.set_webhook(url=f"{WEBHOOK_URL}/{BOT_TOKEN}")
    if success:
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}/{BOT_TOKEN}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Webhook")

    # –ó–∞–ø—É—Å–∫ Flask —Å threaded=True
    app.run(host="0.0.0.0", port=10000, threaded=True)
